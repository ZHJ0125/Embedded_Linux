zhj@thinkpad-vmware:~$ ls
Desktop    Downloads         Linux_Class  Music   opencv_contrib      opencv.zip  Public     Videos
Documents  face_recognition  mooc         opencv  opencv_contrib.zip  Pictures    Templates
zhj@thinkpad-vmware:~$ cd mooc/
zhj@thinkpad-vmware:~/mooc$ ls
ccc  helloworld  helloworld.c  ls_list  mooc.tar.gz  my_pstree
zhj@thinkpad-vmware:~/mooc$ vi 

[No write since last change]

Press ENTER or type command to continue
zhj@thinkpad-vmware:~/mooc$ mkdir lesson1
zhj@thinkpad-vmware:~/mooc$ mv ccc helloworld* ls_list mooc.tar.gz my_pstree lesson1/
zhj@thinkpad-vmware:~/mooc$ mkdir lesson2
zhj@thinkpad-vmware:~/mooc$ cd lesson2/
zhj@thinkpad-vmware:~/mooc/lesson2$ vi hello.c
zhj@thinkpad-vmware:~/mooc/lesson2$ cat hello.c 
#include <stdio.h>
int main()
{
	printf("HelloWorld!\n");
	return 0;
}
zhj@thinkpad-vmware:~/mooc/lesson2$ gcc -v
Using built-in specs.
COLLECT_GCC=gcc
COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/7/lto-wrapper
OFFLOAD_TARGET_NAMES=nvptx-none
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu 7.4.0-1ubuntu1~18.04.1' --with-bugurl=file:///usr/share/doc/gcc-7/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++ --prefix=/usr --with-gcc-major-version-only --program-suffix=-7 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
Thread model: posix
gcc version 7.4.0 (Ubuntu 7.4.0-1ubuntu1~18.04.1) 
zhj@thinkpad-vmware:~/mooc/lesson2$ gcc hello.c -o hello
zhj@thinkpad-vmware:~/mooc/lesson2$ ls
hello  hello.c
zhj@thinkpad-vmware:~/mooc/lesson2$ ./hello 
HelloWorld!
zhj@thinkpad-vmware:~/mooc/lesson2$ gcc hello.c 
zhj@thinkpad-vmware:~/mooc/lesson2$ ls
a.out  hello  hello.c
zhj@thinkpad-vmware:~/mooc/lesson2$ ./a.out 
HelloWorld!
zhj@thinkpad-vmware:~/mooc/lesson2$ vi mul1.c
zhj@thinkpad-vmware:~/mooc/lesson2$ vi mul2.c
zhj@thinkpad-vmware:~/mooc/lesson2$ vi my.h
zhj@thinkpad-vmware:~/mooc/lesson2$ cat mul1.c 
#include <stdio.h>
#include "my.h"
int main()
{
	printf("Hello World!\n");
	f();
	return 0;
}
zhj@thinkpad-vmware:~/mooc/lesson2$ cat mul2.c 
#include <stdio.h>
f()
{
	printf("in f()\n");
}
zhj@thinkpad-vmware:~/mooc/lesson2$ cat my.h 
void f();
zhj@thinkpad-vmware:~/mooc/lesson2$ ls
a.out  hello  hello.c  mul1.c  mul2.c  my.h
zhj@thinkpad-vmware:~/mooc/lesson2$ gcc mul1.c mul2.c -o m.out
mul2.c:2:1: warning: return type defaults to ‘int’ [-Wimplicit-int]
 f()
 ^
zhj@thinkpad-vmware:~/mooc/lesson2$ ls
a.out  hello  hello.c  m.out  mul1.c  mul2.c  my.h
zhj@thinkpad-vmware:~/mooc/lesson2$ ./m.out 
Hello World!
in f()
zhj@thinkpad-vmware:~/mooc/lesson2$ vi mul2.c 
zhj@thinkpad-vmware:~/mooc/lesson2$ cat mul2.c 
#include <stdio.h>
void f()
{
	printf("in f()\n");
}
zhj@thinkpad-vmware:~/mooc/lesson2$ gcc mul1.c mul2.c -o m.out
zhj@thinkpad-vmware:~/mooc/lesson2$ ./m.out 
Hello World!
in f()
zhj@thinkpad-vmware:~/mooc/lesson2$ vi bad.c
zhj@thinkpad-vmware:~/mooc/lesson2$ cat bad.c 
#include <stdio.h>
void main()
{
	long long int var = 3;
	printf("This is not a standard c program!\n");
}
zhj@thinkpad-vmware:~/mooc/lesson2$ gcc -Wall bad.c 
bad.c:2:6: warning: return type of ‘main’ is not ‘int’ [-Wmain]
 void main()
      ^~~~
bad.c: In function ‘main’:
bad.c:4:16: warning: unused variable ‘var’ [-Wunused-variable]
  long long int var = 3;
                ^~~
zhj@thinkpad-vmware:~/mooc/lesson2$ vi optimeze.c
zhj@thinkpad-vmware:~/mooc/lesson2$ cat optimeze.c 
#include <stdio.h>
int main()
{
	double counter;
	double result;
	double temp;
	for(counter = 0; counter < 4000.0*4000.0*4000.0/20.0+2030; counter += (5-3+2-1)/4)
	{
		temp = counter / 1239;
		result = counter;
	}
	printf("The result is %1f\n",result);
	return 0;
}
zhj@thinkpad-vmware:~/mooc/lesson2$ ls
a.out  bad.c  hello  hello.c  m.out  mul1.c  mul2.c  my.h  optimeze.c
zhj@thinkpad-vmware:~/mooc/lesson2$ gcc optimeze.c -o not_optimization
zhj@thinkpad-vmware:~/mooc/lesson2$ time ./not_optimization 

^C
real	28m44.566s
user	28m15.484s
sys	0m14.774s

zhj@thinkpad-vmware:~/mooc/lesson2$ echo "Running time is too long, I interrupt the program"
Running time is too long, I interrupt the program
zhj@thinkpad-vmware:~/mooc/lesson2$ gcc -O optimeze.c -o have_optimization
zhj@thinkpad-vmware:~/mooc/lesson2$ time ./have_optimization 
^C
real	17m10.193s
user	17m7.936s
sys	0m1.537s

zhj@thinkpad-vmware:~/mooc/lesson2$ echo "Running time is too long, I interrupt the program"
Running time is too long, I interrupt the program
zhj@thinkpad-vmware:~/mooc/lesson2$ ls
a.out  bad.c  have_optimization  hello  hello.c  m.out  mul1.c  mul2.c  my.h  not_optimization  optimeze.c
zhj@thinkpad-vmware:~/mooc/lesson2$ vi gdbtest.c
zhj@thinkpad-vmware:~/mooc/lesson2$ gcc -g gdbtest.c 
gdbtest.c: In function ‘func’:
gdbtest.c:8:3: error: ‘sum’ undeclared (first use in this function); did you mean ‘num’?
   sum += i;
   ^~~
   num
gdbtest.c:8:3: note: each undeclared identifier is reported only once for each function it appears in
gdbtest.c: In function ‘main’:
gdbtest.c:20:27: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘long int’ [-Wformat=]
  printf("result(1~100) = %d\n", result);
                          ~^
                          %ld
zhj@thinkpad-vmware:~/mooc/lesson2$ vi gdbtest.c
zhj@thinkpad-vmware:~/mooc/lesson2$ vi gdbtest.c
zhj@thinkpad-vmware:~/mooc/lesson2$ cat gdbtest.c 
#include <stdio.h>
int func(int n)
{
	int sum = 0;
	int i;
	for(i = 1; i <= n; i++)
	{
		sum += i;
	}
	return sum;
}
int main()
{
	int i;
	long result = 0;
	for(i = 1; i <= 100; i++)
	{
		result += i;
	}
	printf("result(1~100) = %ld\n", result);
	printf("result(1~250) = %d\n", func(250));
	return 0;
}
zhj@thinkpad-vmware:~/mooc/lesson2$ gcc -g gdbtest.c 
zhj@thinkpad-vmware:~/mooc/lesson2$ gdb ./a.out 
GNU gdb (Ubuntu 8.1-0ubuntu3.2) 8.1.0.20180409-git
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./a.out...done.
(gdb) list
1	#include <stdio.h>
2	int func(int n)
3	{
4		int sum = 0;
5		int i;
6		for(i = 1; i <= n; i++)
7		{
8			sum += i;
9		}
10		return sum;
(gdb) 
11	}
12	int main()
13	{
14		int i;
15		long result = 0;
16		for(i = 1; i <= 100; i++)
17		{
18			result += i;
19		}
20		printf("result(1~100) = %ld\n", result);
(gdb) b 16
Breakpoint 1 at 0x688: file gdbtest.c, line 16.
(gdb) b 6
Breakpoint 2 at 0x658: file gdbtest.c, line 6.
(gdb) info b
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x0000000000000688 in main at gdbtest.c:16
2       breakpoint     keep y   0x0000000000000658 in func at gdbtest.c:6
(gdb) run 
Starting program: /home/zhj/mooc/lesson2/a.out 

Breakpoint 1, main () at gdbtest.c:16
16		for(i = 1; i <= 100; i++)
(gdb) p i
$1 = 32767
(gdb) next
18			result += i;
(gdb) 
16		for(i = 1; i <= 100; i++)
(gdb) 
18			result += i;
(gdb) 
16		for(i = 1; i <= 100; i++)
(gdb) 
18			result += i;
(gdb) 
16		for(i = 1; i <= 100; i++)
(gdb) 
18			result += i;
(gdb) 
16		for(i = 1; i <= 100; i++)
(gdb) p i
$2 = 4
(gdb) next
18			result += i;
(gdb) 
16		for(i = 1; i <= 100; i++)
(gdb) p i
$3 = 5
(gdb) display i
1: i = 5
(gdb) 
(gdb) 
(gdb) next
18			result += i;
1: i = 6
(gdb) 
16		for(i = 1; i <= 100; i++)
1: i = 6
(gdb) 
18			result += i;
1: i = 7
(gdb) 
16		for(i = 1; i <= 100; i++)
1: i = 7
(gdb) 
18			result += i;
1: i = 8
(gdb) 
16		for(i = 1; i <= 100; i++)
1: i = 8
(gdb) 
18			result += i;
1: i = 9
(gdb) 
16		for(i = 1; i <= 100; i++)
1: i = 9
(gdb) 
18			result += i;
1: i = 10
(gdb) 
16		for(i = 1; i <= 100; i++)
1: i = 10
(gdb) continue 
Continuing.
result(1~100) = 5050

Breakpoint 2, func (n=250) at gdbtest.c:6
6		for(i = 1; i <= n; i++)
(gdb) p i
$4 = 0
(gdb) next
8			sum += i;
(gdb) 
6		for(i = 1; i <= n; i++)
(gdb) 
8			sum += i;
(gdb) 
6		for(i = 1; i <= n; i++)
(gdb) p i
$5 = 2
(gdb) next
8			sum += i;
(gdb) 
6		for(i = 1; i <= n; i++)
(gdb) p i
$6 = 3
(gdb) quit
A debugging session is active.

	Inferior 1 [process 10728] will be killed.

Quit anyway? (y or n) y
zhj@thinkpad-vmware:~/mooc/lesson2$ 
